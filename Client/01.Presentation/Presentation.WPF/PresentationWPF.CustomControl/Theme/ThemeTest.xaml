<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:my="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
    xmlns:classic="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
    xmlns:system="clr-namespace:System;assembly=mscorlib" 
    xmlns:local="clr-namespace:PresentationWPF.CustomControl"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
    <!-- Resource dictionary entries should be defined here. -->
    <Style x:Key="RibbonGroup" TargetType="{x:Type my:RibbonGroup}">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Padding" Value="3,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type my:RibbonGroup}">
                    <Border x:Name="GroupBorder" Margin="1,2,0,0" Background="#00000000" BorderBrush="#FFC4BEBE" BorderThickness="1" CornerRadius="2">
                        <Grid x:Name="MainGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="15.984"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="PART_HotBackground" BorderBrush="{TemplateBinding MouseOverBorderBrush}" BorderThickness="0" Background="{TemplateBinding MouseOverBackground}" CornerRadius="2" Opacity="0" Grid.RowSpan="3" SnapsToDevicePixels="True"/>
                            <Border x:Name="SeparatorBorder" Background="{TemplateBinding BorderBrush}" Grid.Column="0" Height="75" Grid.RowSpan="3" SnapsToDevicePixels="True" VerticalAlignment="Center" Width="0"/>
                            <Border Margin="2,1,2,0" Padding="3,0" BorderThickness="0" CornerRadius="1" BorderBrush="#FFA79A9A">
                                <Grid>
                                    <ItemsPresenter x:Name="ItemsPresenter"/>
                                    <ContentControl x:Name="TemplateContentControl" Focusable="False" Visibility="Collapsed"/>
                                </Grid>
                            </Border>
                            <Border x:Name="LabelSeparatorBorder" Height="0" Margin="5,1,5,-1" Grid.Row="1" Background="#FF97AB94"/>
                            <Grid Margin="2,0" Grid.Row="2" Background="#FFA2C69C">
                                <ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" TextElement.Foreground="#ffffff" HorizontalAlignment="Center" MaxHeight="16" Margin="2,0" VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="MainGrid" Value="#FF9E9E9E"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding HighContrast}" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="MainGrid" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                            <Setter Property="Background" TargetName="PART_HotBackground" Value="Transparent"/>
                            <Setter Property="Visibility" TargetName="SeparatorBorder" Value="Collapsed"/>
                            <Setter Property="BorderThickness" TargetName="GroupBorder" Value="1"/>
                            <Setter Property="Background" TargetName="GroupBorder" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="GroupBorder" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            <Setter Property="Background" TargetName="LabelSeparatorBorder" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </DataTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HotBackground"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.4" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HotBackground"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                                <Condition Binding="{Binding HighContrast}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="TextElement.Foreground" TargetName="MainGrid" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="MouseOverBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                    <GradientStop Color="#01FFFFFF" Offset="0"/>
                    <GradientStop Color="#80FFFFFF" Offset="0.5"/>
                    <GradientStop Color="#01FFFFFF" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="MouseOverBorderBrush" Value="Transparent"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="900"/>
        <Setter Property="ToolTipService.ShowDuration" Value="20000"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsCollapsed" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type my:RibbonGroup}">
                            <Grid x:Name="MainGrid">
                                <my:RibbonToggleButton x:Name="PART_ToggleButton" Background="{TemplateBinding Background}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" LargeImageSource="{TemplateBinding LargeImageSource}" Margin="0,3,0,0" SmallImageSource="{TemplateBinding SmallImageSource}">
                                    <my:RibbonToggleButton.Style>
                                        <Style TargetType="{x:Type my:RibbonToggleButton}">
                                            <Setter Property="Focusable" Value="True"/>
                                            <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type my:RibbonGroup}}}"/>
                                            <Setter Property="MouseOverBorderBrush" Value="Transparent"/>
                                            <Setter Property="MouseOverBackground" Value="#40FFFFFF"/>
                                            <Setter Property="FocusedBackground" Value="{Binding Ribbon.FocusedBackground, RelativeSource={RelativeSource Self}}"/>
                                            <Setter Property="FocusedBorderBrush" Value="Transparent"/>
                                            <Setter Property="CheckedBackground" Value="Transparent"/>
                                            <Setter Property="CheckedBorderBrush" Value="Transparent"/>
                                            <Setter Property="ClickMode" Value="Press"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type my:RibbonToggleButton}">
                                                        <ControlTemplate.Resources>
                                                            <DataTemplate x:Key="{DataTemplateKey DataType={x:Type system:String}}" DataType="{x:Type system:String}">
                                                                <my:RibbonTwoLineText my:RibbonTwoLineText.HasTwoLines="{TemplateBinding my:RibbonTwoLineText.HasTwoLines}" LineStackingStrategy="BlockLineHeight" LineHeight="13" Margin="2,4,2,0" PathFill="{TemplateBinding TextElement.Foreground}" my:RibbonTwoLineText.PathData="{TemplateBinding my:RibbonTwoLineText.PathData}" TextAlignment="Center" Text="{Binding}" VerticalAlignment="Top"/>
                                                            </DataTemplate>
                                                        </ControlTemplate.Resources>
                                                        <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                                                            <Border x:Name="ButtonInnerBorder" BorderBrush="#FFEAF1FB" BorderThickness="1" CornerRadius="2" Margin="1"/>
                                                            <Border x:Name="ButtonOuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="2"/>
                                                            <Border x:Name="PART_HotBackground" BorderBrush="{TemplateBinding MouseOverBorderBrush}" BorderThickness="0" Background="{TemplateBinding MouseOverBackground}" CornerRadius="2" Opacity="0"/>
                                                            <Grid Margin="2">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition/>
                                                                </Grid.RowDefinitions>
                                                                <Border x:Name="ImageOuterBorder" Grid.Row="0">
                                                                    <Border x:Name="ImageMiddleBorder" BorderBrush="#FFAEBECF" BorderThickness="0" CornerRadius="3" HorizontalAlignment="Center" Height="32" Margin="3" VerticalAlignment="Top" Width="32">
                                                                        <Grid>
                                                                            <Border x:Name="ImageInnerBorder" BorderBrush="#FFFCFCFC" BorderThickness="0" CornerRadius="3"/>
                                                                            <Image x:Name="GroupImage" RenderOptions.BitmapScalingMode="NearestNeighbor" HorizontalAlignment="Center" Height="32" Source="{TemplateBinding LargeImageSource}" VerticalAlignment="Center" Width="32"/>
                                                                        </Grid>
                                                                    </Border>
                                                                </Border>
                                                                <Border x:Name="LabelBorder" Grid.Row="1" Grid.RowSpan="2">
                                                                    <Border.Background>
                                                                        <RadialGradientBrush Center="0.5,0.5" GradientOrigin="0.5,1" RadiusY="0.5" RadiusX="1">
                                                                            <GradientStop Color="#30FFFFFF" Offset="0"/>
                                                                            <GradientStop Color="#08808080" Offset="1"/>
                                                                        </RadialGradientBrush>
                                                                    </Border.Background>
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" my:RibbonTwoLineText.HasTwoLines="True" my:RibbonTwoLineText.PathData="M0,0L2.5,3 5,0z"/>
                                                                </Border>
                                                            </Grid>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="LargeImageSource" Value="{x:Null}">
                                                                <Setter Property="Source" TargetName="GroupImage" Value="{Binding SmallImageSource, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Setter Property="Width" TargetName="GroupImage" Value="16"/>
                                                                <Setter Property="Height" TargetName="GroupImage" Value="16"/>
                                                                <Setter Property="BorderThickness" TargetName="ImageMiddleBorder" Value="1"/>
                                                                <Setter Property="Background" TargetName="ImageMiddleBorder">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#88FFFFFF" Offset="0"/>
                                                                            <GradientStop Color="#88DBE7F4" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="BorderThickness" TargetName="ImageInnerBorder" Value="1"/>
                                                                <Setter Property="Background" TargetName="ImageInnerBorder" Value="#50FFFFFF"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Opacity" TargetName="GroupImage" Value="0.5"/>
                                                                <Setter Property="TextElement.Foreground" TargetName="MainGrid" Value="#FF9E9E9E"/>
                                                            </Trigger>
                                                            <DataTrigger Binding="{Binding HighContrast}" Value="True">
                                                                <Setter Property="TextElement.Foreground" TargetName="MainGrid" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                                                                <Setter Property="Background" TargetName="ImageMiddleBorder" Value="Transparent"/>
                                                                <Setter Property="BorderThickness" TargetName="ImageMiddleBorder" Value="0"/>
                                                                <Setter Property="Background" TargetName="ImageInnerBorder" Value="Transparent"/>
                                                                <Setter Property="BorderThickness" TargetName="ImageInnerBorder" Value="0"/>
                                                                <Setter Property="Background" TargetName="PART_HotBackground" Value="Transparent"/>
                                                                <Setter Property="Background" TargetName="LabelBorder" Value="Transparent"/>
                                                                <Setter Property="Background" TargetName="ButtonOuterBorder" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" TargetName="ButtonOuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                                                <Setter Property="CornerRadius" TargetName="ButtonOuterBorder" Value="0"/>
                                                                <Setter Property="CornerRadius" TargetName="ButtonInnerBorder" Value="0"/>
                                                                <Setter Property="BorderThickness" TargetName="ButtonInnerBorder" Value="0,1,0,0"/>
                                                            </DataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding HighContrast}" Value="True"/>
                                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="ButtonInnerBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                                <Setter Property="BorderThickness" TargetName="ButtonInnerBorder" Value="1"/>
                                                                <Setter Property="TextElement.Foreground" TargetName="MainGrid" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding HighContrast}" Value="True"/>
                                                                    <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="ButtonInnerBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                                <Setter Property="BorderThickness" TargetName="ButtonInnerBorder" Value="1"/>
                                                                <Setter Property="TextElement.Foreground" TargetName="MainGrid" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding HighContrast}" Value="True"/>
                                                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Background" TargetName="ButtonOuterBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                                <Setter Property="TextElement.Foreground" TargetName="MainGrid" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                            </MultiDataTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                    <Condition Property="IsChecked" Value="False"/>
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Opacity" TargetName="PART_HotBackground" Value="1"/>
                                                            </MultiTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding HighContrast}" Value="False"/>
                                                                    <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Opacity" TargetName="PART_HotBackground" Value="1"/>
                                                                <Setter Property="Background" TargetName="PART_HotBackground" Value="{Binding FocusedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Setter Property="BorderBrush" TargetName="PART_HotBackground" Value="{Binding FocusedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding HighContrast}" Value="False"/>
                                                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Opacity" TargetName="PART_HotBackground" Value="1"/>
                                                                <Setter Property="Background" TargetName="PART_HotBackground" Value="{Binding CheckedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Setter Property="BorderBrush" TargetName="PART_HotBackground" Value="{Binding CheckedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                <Setter Property="Background" TargetName="ImageOuterBorder" Value="#20BBBBBB"/>
                                                                <Setter Property="Background" TargetName="LabelBorder">
                                                                    <Setter.Value>
                                                                        <RadialGradientBrush Center="0.5,1" GradientOrigin="0.5,0.95" RadiusY="0.5" RadiusX="0.9">
                                                                            <GradientStop Color="#AAFFFFFF" Offset="0"/>
                                                                            <GradientStop Color="#40BBBBBB" Offset="1"/>
                                                                        </RadialGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                                                                    <Condition Binding="{Binding HighContrast}" Value="True"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextElement.Foreground" TargetName="MainGrid" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </MultiDataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </my:RibbonToggleButton.Style>
                                </my:RibbonToggleButton>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                                    <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" RenderOptions.ClearTypeHint="Enabled" CornerRadius="2" FocusVisualStyle="{x:Null}" Focusable="True" KeyTipService.IsKeyTipScope="True" SnapsToDevicePixels="True">
                                        <Grid x:Name="PopupGrid" Height="{TemplateBinding ActualHeight}" Margin="0,1.5,0,0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto" MinHeight="16"/>
                                            </Grid.RowDefinitions>
                                            <Border x:Name="PopupBorder" BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="1" Background="{TemplateBinding Background}" Grid.RowSpan="2"/>
                                            <Border x:Name="PART_HotBackground" BorderBrush="{TemplateBinding MouseOverBorderBrush}" BorderThickness="0" Background="{TemplateBinding MouseOverBackground}" CornerRadius="2" Opacity="0" Grid.RowSpan="2" SnapsToDevicePixels="True"/>
                                            <Border x:Name="PART_RibbonControlsHostBorder" Margin="2,3.5,2,0" Padding="3,0">
                                                <Grid>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Cycle"/>
                                                    <ContentControl x:Name="TemplateContentControl" Focusable="False" Visibility="Collapsed"/>
                                                </Grid>
                                            </Border>
                                            <Grid Margin="2,0,2,1" Grid.Row="1">
                                                <ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" TextElement.Foreground="#FF9E9E9E" HorizontalAlignment="Center" MaxHeight="15" Margin="2,0" VerticalAlignment="Center"/>
                                            </Grid>
                                        </Grid>
                                    </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding HighContrast}" Value="False"/>
                                        <Condition Binding="{Binding Background, RelativeSource={RelativeSource Self}}" Value="Transparent"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="PopupBorder" Value="{Binding Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="MainGrid" Value="#FF9E9E9E"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding HighContrast}" Value="True">
                                    <Setter Property="TextElement.Foreground" TargetName="MainGrid" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                                    <Setter Property="Background" TargetName="PART_HotBackground" Value="Transparent"/>
                                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                    <Setter Property="BorderBrush" TargetName="PopupBorder" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                    <Setter Property="Background" TargetName="PopupBorder" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    <Setter Property="CornerRadius" TargetName="Shdw" Value="0"/>
                                </DataTrigger>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                    <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="IsOpen" SourceName="PART_Popup" Value="False">
                                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                </Trigger>
                                <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="Shdw">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HotBackground"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="Shdw">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.4" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HotBackground"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <Trigger Property="IsInQuickAccessToolBar" Value="True">
                                    <Setter Property="Height" TargetName="PopupGrid" Value="91"/>
                                    <Setter Property="Style" TargetName="PART_ToggleButton">
                                        <Setter.Value>
                                            <Style TargetType="{x:Type my:RibbonToggleButton}">
                                                <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor"/>
                                                <Setter Property="Focusable" Value="True"/>
                                                <Setter Property="BorderBrush" Value="#80808080"/>
                                                <Setter Property="Background" Value="#AAFFFFFF"/>
                                                <Setter Property="MouseOverBorderBrush" Value="Transparent"/>
                                                <Setter Property="MouseOverBackground">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                            <GradientStop Color="#80FFFFFF" Offset="0"/>
                                                            <GradientStop Color="#60FFFFFF" Offset="0.5"/>
                                                            <GradientStop Color="#40808080" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="FocusedBackground" Value="{Binding Ribbon.FocusedBackground, RelativeSource={RelativeSource Self}}"/>
                                                <Setter Property="FocusedBorderBrush" Value="Transparent"/>
                                                <Setter Property="CheckedBackground">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                            <GradientStop Color="#80808080" Offset="0"/>
                                                            <GradientStop Color="#80FFFFFF" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="CheckedBorderBrush" Value="Transparent"/>
                                                <Setter Property="Margin" Value="0,-1,0,0"/>
                                                <Setter Property="ClickMode" Value="Press"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type my:RibbonToggleButton}">
                                                            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="3">
                                                                <Grid>
                                                                    <Border x:Name="InnerBorder" BorderBrush="{TemplateBinding MouseOverBorderBrush}" Background="{TemplateBinding MouseOverBackground}" CornerRadius="3" Opacity="0"/>
                                                                    <Image x:Name="GroupImage" RenderOptions.BitmapScalingMode="{TemplateBinding RenderOptions.BitmapScalingMode}" HorizontalAlignment="Center" Height="16" Margin="3,2" Source="{TemplateBinding SmallImageSource}" VerticalAlignment="Center" Width="16"/>
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Opacity" TargetName="GroupImage" Value="0.5"/>
                                                                </Trigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}" Value="False"/>
                                                                        <Condition Binding="{Binding Background, RelativeSource={RelativeSource Self}}" Value="Transparent"/>
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Background" TargetName="OuterBorder" Value="{Binding Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}" Value="False"/>
                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False"/>
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Opacity" TargetName="InnerBorder" Value="1"/>
                                                                    <Setter Property="Background" TargetName="OuterBorder" Value="Transparent"/>
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}" Value="False"/>
                                                                        <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False"/>
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Opacity" TargetName="InnerBorder" Value="1"/>
                                                                    <Setter Property="Background" TargetName="InnerBorder" Value="{Binding FocusedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                    <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{Binding FocusedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                    <Setter Property="Background" TargetName="OuterBorder" Value="Transparent"/>
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}" Value="False"/>
                                                                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Background" TargetName="InnerBorder" Value="{Binding CheckedBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                    <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{Binding CheckedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                    <Setter Property="Opacity" TargetName="InnerBorder" Value="1"/>
                                                                    <Setter Property="Background" TargetName="OuterBorder" Value="Transparent"/>
                                                                    <Setter Property="BorderBrush" TargetName="OuterBorder" Value="#AA808080"/>
                                                                </MultiDataTrigger>
                                                                <DataTrigger Binding="{Binding HighContrast}" Value="True">
                                                                    <Setter Property="CornerRadius" TargetName="OuterBorder" Value="0"/>
                                                                    <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                                    <Setter Property="Background" TargetName="OuterBorder" Value="Transparent"/>
                                                                </DataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}" Value="True"/>
                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}" Value="True"/>
                                                                        <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}" Value="True"/>
                                                                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                                    <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                                                </MultiDataTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Margin" TargetName="PART_ToggleButton" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsDropDownOpen" Value="True">
                                    <Setter Property="ToolTipService.IsEnabled" TargetName="MainGrid" Value="False"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                                        <Condition Binding="{Binding HighContrast}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="TextElement.Foreground" TargetName="MainGrid" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3,3,3,1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="TabControlNormalBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF4F9F4" Offset="0"/>
        <GradientStop Color="#FF9BCA9B" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#ebffeb" Offset="0.0"/>
                <GradientStop Color="#e1f7e1" Offset="0.5"/>
                <GradientStop Color="#d0e6d0" Offset="0.5"/>
                <GradientStop Color="#cbe1cb" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#FFf9f9f9"/>
    <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#FF8c8e94"/>
    <LinearGradientBrush x:Key="TabItemDisabledBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#fafafa" Offset="0.0"/>
                <GradientStop Color="#eeeeee" Offset="0.5"/>
                <GradientStop Color="#dfdfdf" Offset="0.5"/>
                <GradientStop Color="#d8d8d8" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FF8c8e94"/>

    <Style TargetType="{x:Type local:CloseableTabItem}" >
        <Style.Resources>
            <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#F3F3F3" Offset="0"/>
                <GradientStop Color="#EBEBEB" Offset="0.5"/>
                <GradientStop Color="#DDDDDD" Offset="0.5"/>
                <GradientStop Color="#CDCDCD" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="ButtonOverBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFFAFAFA" Offset="0"/>
                <GradientStop Color="#FFE0E0E3" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="ButtonPressedBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFE0E0E2" Offset="0"/>
                <GradientStop Color="#FFF8F8F8" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF8c8e94"/>
            <Style x:Key="CloseableTabItemButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border SnapsToDevicePixels="true" x:Name="Chrome" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Opacity="0" />
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" TargetName="Chrome" Value="1"/>
                                    <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource ButtonOverBackground}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" TargetName="Chrome" Value="1"/>
                                    <Setter Property="Background" TargetName="Chrome" Value="{DynamicResource ButtonPressedBackground}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="6,1,6,1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CloseableTabItem}">
                    <Grid SnapsToDevicePixels="true" Margin="2,0,0,0">
                        <Border x:Name="Bd" BorderThickness="1,1,1,0" BorderBrush="{DynamicResource TabItemDisabledBorderBrush}" Background="{DynamicResource TabItemDisabledBackground}" Margin="3,0,0,0" Cursor="Hand" CornerRadius="0" >
                            <DockPanel x:Name="ContentPanel" Cursor="Hand">
                                <StackPanel Orientation="Vertical">
                                    <Button x:Name="PART_Close" HorizontalAlignment="Center" Margin="3,0,3,0" VerticalAlignment="Center" Width="16" Height="16" DockPanel.Dock="Right" Style="{DynamicResource CloseableTabItemButtonStyle}" ToolTip="Close Tab">
                                        <Path x:Name="Path" Stretch="Fill" StrokeThickness="0.5" Stroke="#FF333333" Fill="#FF969696" Data="F1 M 2.28484e-007,1.33331L 1.33333,0L 4.00001,2.66669L 6.66667,6.10352e-005L 8,1.33331L 5.33334,4L 8,6.66669L 6.66667,8L 4,5.33331L 1.33333,8L 1.086e-007,6.66669L 2.66667,4L 2.28484e-007,1.33331 Z " HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                    </Button>
                                    <ContentPresenter x:Name="Content" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}">
                                        <ContentPresenter.LayoutTransform>
                                            <RotateTransform Angle="270" />
                                        </ContentPresenter.LayoutTransform>
                                    </ContentPresenter>
                                </StackPanel>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" SourceName="PART_Close" Value="True">
                            <Setter Property="Fill" TargetName="Path" Value="#FFB83C3D"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="PART_Close" Value="True">
                            <Setter Property="Fill" TargetName="Path" Value="#FF9D3838"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                            <Setter Property="Margin" TargetName="ContentPanel" Value="1,0,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type telerik:RadTabControl}">
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>

    <Style TargetType="{x:Type telerik:RadTabItem}" x:Key="HeaderTemplate">
        <Setter Property="UseLayoutRounding" Value="False"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type system:String}">
                    <Grid HorizontalAlignment="Left" Height="45">
                        <AccessText Text="{Binding}" TextWrapping="Wrap" VerticalAlignment="Center"/>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="BorderBrush" Value="#889088"/>
                <Setter Property="BorderThickness" Value="1,0,0,0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type telerik:RadComboBox}">
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="TextSearchMode" Value="Contains"/>
        <Setter Property="IsFilteringEnabled" Value="True"/>
        <Setter Property="IsTextSearchEnabled" Value="True"/>
        <Setter Property="OpenDropDownOnFocus" Value="True"/>
    </Style>
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="UseLayoutRounding" Value="False"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" FontWeight="Bold"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupBoxExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid SnapsToDevicePixels="False" Background="Transparent">
                        <Ellipse HorizontalAlignment="Center" x:Name="circle" VerticalAlignment="Center" Width="20" Height="20" Fill="{DynamicResource ButtonNormalBackgroundFill}" Stroke="DarkGray"/>
                        <Ellipse Visibility="Hidden" HorizontalAlignment="Center" x:Name="shadow" VerticalAlignment="Center" Width="20" Height="20" Fill="{DynamicResource ExpanderShadowFill}"/>
                        <Path SnapsToDevicePixels="false" x:Name="arrow" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="#666" StrokeThickness="2" Data="M1,1 L4,4 7,1" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4  L 4,1  L 7,4"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="circle" Value="#666"/>
                            <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                            <Setter Property="Visibility" TargetName="shadow" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="GroupBoxBorderBrush" Color="#D0D0BF"/>
    <SolidColorBrush x:Key="GroupBoxHeaderBrush" Color="#0046D5"/>
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style TargetType="{x:Type Expander}">
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="BorderBrush" Value="{StaticResource GroupBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
                        <Border x:Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="3,0,3,0">
                            <Grid SnapsToDevicePixels="False" Background="Transparent" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ToggleButton Grid.Column="0" MinHeight="0" MinWidth="0"
                                    Name="HeaderToggle" Style="{StaticResource GroupBoxExpanderToggleButtonStyle}"
                                    IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" >
                                </ToggleButton>
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="true"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3,0,0,0" />
                            </Grid>
                        </Border>

                        <ContentPresenter x:Name="ExpandSite" Visibility="Collapsed" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding Path="ActualWidth" ElementName="Header"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="GridHeaderBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#94b192" Offset="0.0"/>
                <GradientStop Color="#6a9468" Offset="0.45"/>
                <GradientStop Color="#3e763b" Offset="0.45"/>
                <GradientStop Color="#729970" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GridHeaderBorder" Color="#699467"/>
    <Style TargetType="{x:Type telerik:CommonColumnHeader}">
        <Setter Property="Background" Value="#4e764b"/>
        <Setter Property="BorderBrush" Value="#4b4b4b"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>
    <Style TargetType="{x:Type telerik:GridViewHeaderCell}">
        <Setter Property="Background" Value="{StaticResource GridHeaderBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridHeaderBorder}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="-1" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type telerik:GridViewHeaderRow}">
        <Setter Property="Background" Value="{StaticResource GridHeaderBackground}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style TargetType="{x:Type telerik:RadGridView}">
        <Setter Property="UseLayoutRounding" Value="False"/>
    </Style>
    <Style TargetType="{x:Type telerik:RadMaskedNumericInput}">
        <Setter Property="Placeholder" Value=" " />
        <Setter Property="IsClearButtonVisible" Value="False" />
    </Style>
    <Style TargetType="{x:Type telerik:RadMaskedCurrencyInput}">
        <Setter Property="Placeholder" Value=" " />
    </Style>
    <Style TargetType="{x:Type telerik:RadMaskedDateTimeInput}">
        <Setter Property="Mask" Value="dd/MM/yyyy" />
        <Setter Property="SectionsNavigationMode" Value="None" />
        <!--<Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
            </Trigger>
        </Style.Triggers>-->
    </Style>
    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Width" Value="30" />
        <Setter Property="FirstDayOfWeek" Value="Monday" />
    </Style>
    <Style TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Visibility" Value="Hidden" />
    </Style>
    <SolidColorBrush x:Key="ButtonNormalBorderBrush" Color="#909090" />
    <SolidColorBrush x:Key="ButtonDefaultBorderBrush" Color="#70a070" />
    <SolidColorBrush x:Key="ButtonFocusedBorderBrush" Color="#80d080" />
    <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="#609060" />
    <SolidColorBrush x:Key="ButtonPressedInnerBorderBrush" Color="#90b090" />
    <SolidColorBrush x:Key="ButtonDisabledBackgroundBrush" Color="#f4f4f4" />
    <SolidColorBrush x:Key="ButtonDisabledBorderBrush" Color="#adb5b2" />
    <SolidColorBrush x:Key="ButtonDisabledForegroundBrush" Color="#adadad" />
    <LinearGradientBrush x:Key="ButtonNormalBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#fafafa" Offset="0.0"/>
                <GradientStop Color="#eeeeee" Offset="0.45"/>
                <GradientStop Color="#dfdfdf" Offset="0.45"/>
                <GradientStop Color="#d8d8d8" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonDefaultBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#ebffeb" Offset="0.0"/>
                <GradientStop Color="#e1f7e1" Offset="0.45"/>
                <GradientStop Color="#d0e6d0" Offset="0.45"/>
                <GradientStop Color="#cbe1cb" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonPressedBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#dbf9db" Offset="0.0"/>
                <GradientStop Color="#d1efd1" Offset="0.45"/>
                <GradientStop Color="#c0dec0" Offset="0.45"/>
                <GradientStop Color="#bbd9bb" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="RibbonButton" TargetType="{x:Type my:RibbonButton}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ContextMenuService.IsEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type my:RibbonButton}">
                    <Border x:Name="OuterBorder"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Background="{StaticResource ButtonNormalBackground}"
                        BorderBrush="{StaticResource ButtonNormalBorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid >
                            <Border x:Name="InnerBorder"
                            BorderBrush="#80FFFFFF"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClipToBounds="True"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            </Border>
                            <StackPanel x:Name="StackPanel" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Image x:Name="PART_Image" Source="{TemplateBinding SmallImageSource}" Width="Auto" Height="16" Margin="5,0,-2,0"/>
                                <Label Content="{TemplateBinding Label}" Height="26" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SmallImageSource" Value="{x:Null}">
                            <Setter TargetName="PART_Image" Property="Width" Value="0" />
                            <Setter TargetName="PART_Image" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonDefaultBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ButtonFocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonDefaultBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ButtonFocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonDefaultBackground}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ButtonDefaultBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonPressedBackground}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ButtonPressedInnerBorderBrush}" />
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,0,0" />
                            <Setter TargetName="InnerBorder" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Green" Direction="320" 
                                        ShadowDepth="1" Opacity=".15" BlurRadius="1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonDisabledBackgroundBrush}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ButtonDisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ButtonDisabledForegroundBrush}"/>
                            <Setter TargetName="PART_Image" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="&#255;">M 0 0 L 2.5 3 L 5 0 Z</Geometry>
    <ControlTemplate x:Key="&#292;" TargetType="{x:Type my:RibbonToggleButton}">
        <Grid x:Name="MainGrid">
            <Border x:Name="OuterBorder"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    Background="{StaticResource ButtonNormalBackground}"
                    BorderBrush="{StaticResource ButtonNormalBorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Border x:Name="InnerBorder"
                    Background="Transparent"
                    BorderBrush="#80FFFFFF"
                    ClipToBounds="True"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}"/>
                    <StackPanel x:Name="StackPanel" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Image x:Name="PART_Image" Source="{TemplateBinding SmallImageSource}" Margin="5,0,0,0" Width="16" Height="16" VerticalAlignment="Center" />
                        <Label Content="{TemplateBinding Label}" Height="26" VerticalAlignment="Center" Margin="-1,0,-1,0" />
                        <Path Name="Arrow" Width="10" Fill="{TemplateBinding Foreground}" Data="{StaticResource &#255;}" VerticalAlignment="Center" />
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonDefaultBackground}" />
                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ButtonDefaultBorderBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonDefaultBackground}" />
                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ButtonFocusedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonDisabledBackgroundBrush}" />
                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ButtonDisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource ButtonDisabledForegroundBrush}"/>
                <Setter TargetName="PART_Image" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonPressedBackground}" />
                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ButtonPressedInnerBorderBrush}" />
                <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,0,0" />
                <Setter TargetName="InnerBorder" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Green" Direction="320" 
                                        ShadowDepth="1" Opacity=".15" BlurRadius="1" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonPressedBackground}" />
                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ButtonPressedInnerBorderBrush}" />
                <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,0,0" />
                <Setter TargetName="InnerBorder" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Green" Direction="320" 
                                        ShadowDepth="1" Opacity=".15" BlurRadius="1" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="RibbonMenuButton" TargetType="{x:Type my:RibbonMenuButton}">
        <Setter Property="Height" Value="24" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ContextMenuService.IsEnabled" Value="False"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorderBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type my:RibbonMenuButton}">
                    <Grid x:Name="MainGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <!-- Please note that the setter for the Style property is only so that this ToggleButton doesn't accidentally pick up some styles defined at the app level. -->
                        <my:RibbonToggleButton x:Name="PART_ToggleButton"
                                               UseLayoutRounding="True"
                                               Template="{StaticResource &#292;}"
                                               Label="{TemplateBinding Label}"
                                               Height="{TemplateBinding Height}"
                                               SmallImageSource="{TemplateBinding SmallImageSource}"
                                               CornerRadius="2"
                                               FocusVisualStyle="{x:Null}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Padding="{TemplateBinding Padding}"
                                               ClickMode="Press"
                                               IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}">
                            <my:RibbonToggleButton.Resources>
                                <Thickness x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type my:Ribbon}, ResourceId=LargeImageMargin}"
                                    Left="1"
                                    Top="1"
                                    Right="1"
                                    Bottom="2" />
                            </my:RibbonToggleButton.Resources>
                        </my:RibbonToggleButton>
                        <Popup x:Name="PART_Popup"
                               UseLayoutRounding="True"
                           HorizontalOffset="1"
                           VerticalOffset="-1"
                           AllowsTransparency="True"
                           Placement="Bottom"
                           IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}"
                           Focusable="False"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                            <classic:SystemDropShadowChrome Name="Shadow" Color="Transparent"

                           RenderOptions.ClearTypeHint="Enabled"

                        >
                                <Border x:Name="MenuBorder"
                                    BorderBrush="{StaticResource ButtonNormalBorderBrush}"
                                    Background="#fafffa"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2">
                                    <Border x:Name="SubMenuInnerBorder"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        CornerRadius="2">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ScrollViewer x:Name="PART_SubMenuScrollViewer"
                                                      Grid.Row="1"
                                                      Margin="1"
                                                      Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">

                                                <Grid RenderOptions.ClearTypeHint="Auto" UseLayoutRounding="True">
                                                    <!--<Canvas x:Name="BackgroundCanvas"
                                                        Height="0"
                                                        Width="0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Top">
                                                        <Rectangle x:Name="OpaqueRect"
                                                               Height="{Binding ElementName=MenuBorder,Path=ActualHeight}"
                                                               Width="{Binding ElementName=MenuBorder,Path=ActualWidth}"
                                                               Fill="{Binding ElementName=MenuBorder,Path=Background}"
                                                               RadiusX="2"
                                                               RadiusY="2" />
                                                        <Rectangle x:Name="OverlayRect"
                                                               Height="{Binding ElementName=SubMenuInnerBorder,Path=ActualHeight}"
                                                               Width="{Binding ElementName=SubMenuInnerBorder,Path=ActualWidth}"
                                                               Fill="{Binding ElementName=SubMenuInnerBorder,Path=Background}"
                                                               RadiusX="2"
                                                               RadiusY="2" />
                                                    </Canvas>-->
                                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        Grid.IsSharedSizeScope="True" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Grid>
                                    </Border>
                                </Border>
                            </classic:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--<Trigger SourceName="PART_SubMenuScrollViewer"
                             Property="ScrollViewer.CanContentScroll"
                             Value="false">
                            <Setter TargetName="OpaqueRect" 
                                Property="Canvas.Top" 
                                Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OpaqueRect" 
                                Property="Canvas.Left" 
                                Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" />
                            <Setter TargetName="OverlayRect" 
                                Property="Canvas.Top" 
                                Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=VerticalOffset}" />
                            <Setter TargetName="OverlayRect" 
                                Property="Canvas.Left" 
                                Value="{Binding ElementName=PART_SubMenuScrollViewer, Path=HorizontalOffset}" />
                        </Trigger>-->

                        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                            <Setter TargetName="Shadow" Property="Margin" Value="0,0,5,5"/>
                            <Setter TargetName="Shadow" Property="Color" Value="#71000000"/>
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="False">
                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RibbonMenuItem" TargetType="{x:Type my:RibbonMenuItem}">
        <Setter Property="Height" Value="24"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ContextMenuService.IsEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type my:RibbonMenuItem}">
                    <Grid>
                        <Border x:Name="OuterBorder"
                            Background="#fafffa"
                                BorderBrush="#c0dec0"
                            BorderThickness="0"/>
                        <StackPanel x:Name="StackPanel" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left">
                            <Image x:Name="PART_Image" Source="{TemplateBinding ImageSource}" Width="16" Height="16" Margin="5,0,5,0"/>
                            <Label Content="{TemplateBinding Header}" Height="26" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="OuterBorder" Property="Background" Value="#e0f0e0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="OuterBorder" Property="Background" Value="#e0f0e0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="OuterBorder" Property="Background" Value="#e0f0e0" />
                            <Setter TargetName="OuterBorder" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Window}">
        <Setter Property="Height" Value="700" />
        <Setter Property="Width" Value="1024" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <DockPanel LastChildFill="True">
                        <Border Background="Purple" DockPanel.Dock="Top" 
                            Height="{x:Static SystemParameters.CaptionHeight}" x:Name="titlebar">
                            <Grid>
                                <TextBlock Text="Test Environment" 
                                        Margin="10,0,0,0" 
                                        VerticalAlignment="Center" FontSize="16" FontWeight="Bold" Foreground="White">
                                    <TextBlock.Effect>
                                        <DropShadowEffect Color="White" ShadowDepth="3"/>
                                    </TextBlock.Effect>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <Border Background="{TemplateBinding Background}" BorderBrush="LightGray" 
                            BorderThickness="1" Padding="4">
                            <ContentPresenter/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type telerik:RadTimePicker}">
        <Setter Property="Width" Value="30" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>
    <Style TargetType="{x:Type telerik:RadTreeView}">
        <Setter Property="IsExpandOnDblClickEnabled" Value="True" />
        <Setter Property="Padding" Value="5" />
    </Style>
    <Style TargetType="{x:Type CheckBox}" x:Key="chkHeaderGridView">
        <Setter Property="Foreground" Value="White" />
    </Style>

    <!--<Style TargetType="{x:Type telerik:RadComboBox}">
        <Setter Property="Background" Value="White"/>
        
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White" />
    </Style>-->
    
    <!--<Style TargetType="{x:Type Button}">
        <Setter Property="Height" Value="26"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="OuterBorder"
                        CornerRadius="2"
                        Background="{StaticResource ButtonNormalBackground}"
                        BorderBrush="{StaticResource ButtonNormalBorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Border x:Name="InnerBorder"
                            BorderBrush="#80FFFFFF"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClipToBounds="True"
                            CornerRadius="2">
                            </Border>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonDefaultBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ButtonFocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonDefaultBackground}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ButtonFocusedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonDefaultBackground}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ButtonDefaultBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonPressedBackground}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource ButtonPressedInnerBorderBrush}" />
                            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1,1,0,0" />
                            <Setter TargetName="InnerBorder" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Green" Direction="320" 
                                        ShadowDepth="1" Opacity=".15" BlurRadius="1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource ButtonDisabledBackgroundBrush}" />
                            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource ButtonDisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ButtonDisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--<DataTemplate DataType="{x:Type System:String}" x:Key="HeaderTemplate" >
        <Grid HorizontalAlignment="Left" Height="45">
            <AccessText Text="{Binding}" TextWrapping="Wrap" VerticalAlignment="Center"/>
        </Grid>
    </DataTemplate>-->
</ResourceDictionary>